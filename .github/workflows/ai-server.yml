name: AI Server CI/CD

on:
  push:
    branches: [main]
    paths:
      - "apps/ai-server/**"
      - "packages/**"
  pull_request:
    branches: [main]
    paths:
      - "apps/ai-server/**"
      - "packages/**"

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: "pip"
          cache-dependency-path: "apps/ai-server/requirements.txt"

      - name: Install dependencies
        run: |
          cd apps/ai-server
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov

      - name: Run tests
        run: |
          cd apps/ai-server
          pytest --cov=./ --cov-report=xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./apps/ai-server/coverage.xml
          fail_ci_if_error: true

  build-and-push:
    needs: test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: ./apps/ai-server
          push: true
          tags: |
            your-dockerhub-username/ai-server:latest
            your-dockerhub-username/ai-server:${{ github.sha }}
          cache-from: type=registry,ref=your-dockerhub-username/ai-server:buildcache
          cache-to: type=registry,ref=your-dockerhub-username/ai-server:buildcache,mode=max

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Deploy to production
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            cd /path/to/deployment
            docker pull your-dockerhub-username/ai-server:${{ github.sha }}
            docker-compose up -d
